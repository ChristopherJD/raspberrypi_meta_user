From c6fc5c37324e16cc67ed8d9de990733c4c28f10c Mon Sep 17 00:00:00 2001
From: Christopher Jordan-Denny <jordan.denny5@gmail.com>
Date: Thu, 6 Jun 2019 23:32:48 -0500
Subject: [PATCH] SPI driver will now honor the SPI_NO_CS flag.

---
 drivers/spi/spi.c | 17 +++++++++--------
 1 file changed, 9 insertions(+), 8 deletions(-)

diff --git a/drivers/spi/spi.c b/drivers/spi/spi.c
index af71c9181216..4121c6388de0 100644
--- a/drivers/spi/spi.c
+++ b/drivers/spi/spi.c
@@ -728,16 +728,17 @@ static void spi_set_cs(struct spi_device *spi, bool enable)
 	if (spi->mode & SPI_CS_HIGH)
 		enable = !enable;
 
-	if (gpio_is_valid(spi->cs_gpio)) {
-		/* Honour the SPI_NO_CS flag */
-		if (!(spi->mode & SPI_NO_CS))
+	/* Honour the SPI_NO_CS flag */
+	if (!(spi->mode & SPI_NO_CS)) {
+		if (gpio_is_valid(spi->cs_gpio)) {
 			gpio_set_value(spi->cs_gpio, !enable);
-		/* Some SPI masters need both GPIO CS & slave_select */
-		if ((spi->controller->flags & SPI_MASTER_GPIO_SS) &&
-		    spi->controller->set_cs)
+			/* Some SPI masters need both GPIO CS & slave_select */
+			if ((spi->controller->flags & SPI_MASTER_GPIO_SS) &&
+			    spi->controller->set_cs)
+				spi->controller->set_cs(spi, !enable);
+		} else if (spi->controller->set_cs) {
 			spi->controller->set_cs(spi, !enable);
-	} else if (spi->controller->set_cs) {
-		spi->controller->set_cs(spi, !enable);
+		}
 	}
 }
 
